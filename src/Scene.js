/*
  Auto-generated by Spline
*/

import useSpline from '@splinetool/r3f-spline'
import { OrthographicCamera } from '@react-three/drei'

export default function Scene({ ...props }) {
  const { nodes, materials } = useSpline('https://prod.spline.design/onqcmD8YHwAOjmzH/scene.splinecode')
  return (
    <>
      <color attach="background" args={['#5d238e']} />
      <group {...props} dispose={null}>
        <mesh
          name="Star 3"
          geometry={nodes['Star 3'].geometry}
          material={materials['Star 3 Material']}
          castShadow
          receiveShadow
          position={[557.73, 224.71, -14.7]}
          rotation={[0, 0.48, 0.46]}
          scale={1.41}
        />
        <mesh
          name="Star 2"
          geometry={nodes['Star 2'].geometry}
          material={materials['Star 2 Material']}
          castShadow
          receiveShadow
          position={[526.91, -224.7, -415.9]}
          rotation={[3.04, -0.09, 1.34]}
          scale={1}
        />
        <mesh
          name="Star4"
          geometry={nodes.Star4.geometry}
          material={materials['Star4 Material']}
          castShadow
          receiveShadow
          position={[-269.04, 335.94, -163.17]}
          rotation={[-0.93, 0.87, 1.21]}
          scale={1}
        />
        <mesh
          name="Eyes"
          geometry={nodes.Eyes.geometry}
          material={materials.eyeball}
          castShadow
          receiveShadow
          position={[2.58, 41.18, 68.11]}
        />
        <mesh
          name="Dot"
          geometry={nodes.Dot.geometry}
          material={materials['Dot Material']}
          castShadow
          receiveShadow
          position={[-358.79, 551.32, -289.73]}
          rotation={[-0.17, 1.31, 0.17]}
          scale={1}
        />
        <mesh
          name="Moon"
          geometry={nodes.Moon.geometry}
          material={materials.Celestial}
          castShadow
          receiveShadow
          position={[-131.83, 433.33, -696.76]}
          rotation={[-0.17, 1.31, 0.17]}
          scale={1}
        />
        <group name="Hat" position={[9.16, 135.87, -107.28]} rotation={[0.02, 0, 0]} scale={1}>
          <mesh
            name="Strap"
            geometry={nodes.Strap.geometry}
            material={materials.hat}
            castShadow
            receiveShadow
            position={[-9.53, -152.68, 92.8]}
            rotation={[-0.41, 0, 0]}
            scale={1}
          />
          <mesh
            name="Hat cone"
            geometry={nodes['Hat cone'].geometry}
            material={materials.hat}
            castShadow
            receiveShadow
            position={[5.37, 31.55, -34.28]}
            rotation={[-0.63, 0, 0]}
            scale={1.28}
          />
          <mesh
            name="Brim"
            geometry={nodes.Brim.geometry}
            material={materials.hat}
            castShadow
            receiveShadow
            position={[0, -88.9, 58.3]}
            rotation={[-2.2, 0, 0]}
            scale={1.28}
          />
        </group>
        <mesh
          name="Ghost"
          geometry={nodes.Ghost.geometry}
          material={materials['Ghost Material']}
          castShadow
          receiveShadow
          position={[0, -18.79, -27.03]}
        />
        <directionalLight
          name="Directional Light"
          castShadow
          intensity={0.3}
          shadow-mapSize-width={1024}
          shadow-mapSize-height={1024}
          shadow-camera-near={-10000}
          shadow-camera-far={100000}
          shadow-camera-left={-500}
          shadow-camera-right={500}
          shadow-camera-top={500}
          shadow-camera-bottom={-500}
          position={[200, 1416.49, 1532.52]}
        />
        <OrthographicCamera
          name="1"
          makeDefault={true}
          zoom={1.36}
          far={100000}
          near={-100000}
          position={[853.05, 26.52, 713.24]}
          rotation={[-0.1, 0.86, 0.08]}
          scale={1}
        />
        <hemisphereLight name="Default Ambient Light" intensity={0.75} color="#eaeaea" />
      </group>
    </>
  )
}
